#
# Build the project

name: Build

#
# Operational Variables

env:
  MAJOR: 0
  MINOR: 0
  JAVA_VERSION: 3.13.0

#
# Establish when the workflow is run
# We do build on every push except when we push onto main (which ought to be subject to branch protection)
# We do build whenever a PR onto main is closed (see on) and the code is actually merged (see release job if)
# Why is that okay?
# Since we're making a PR, we know from the previous workflow run on push that the repo is okay and the PR
# shows that to us. A PR itself doesn't cause a build, except when it is closed and the changes were merged.

on:
  push:
    branches-ignore:
    - main

#
# Workflow

jobs:

  build:
    runs-on: ubuntu-latest
    steps:

    - name: Checkout out our code
      uses: actions/checkout@v4

    - name: Calculate Build Context
      run: |
        MRMAT_VERSION="${MAJOR}.${MINOR}.${GITHUB_RUN_NUMBER}"
        if [ "$GITHUB_EVENT_NAME" == 'pull_request_target' -a "$GITHUB_BASE_REF" == 'main' ]; then
          MRMAT_IS_RELEASE=true
          echo "::warning ::Building release ${MRMAT_VERSION}"
          echo "MRMAT_IS_RELEASE=true" >> $GITHUB_ENV
        else
          MRMAT_VERSION="${MRMAT_VERSION}-SNAPSHOT"
          echo "::warning ::Building version ${MRMAT_VERSION}"
        fi
        echo "MRMAT_VERSION=${MRMAT_VERSION}" >> $GITHUB_ENV

    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: temurin
        java-version: '17'

    - name: Setup a cache
      uses: actions/cache@v4
      with:
        key: ${{ runner.os }}
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper

    - name: Build
      run: ./gradlew build
